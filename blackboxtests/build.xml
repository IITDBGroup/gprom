<project name="GProMBlackBoxTests" 
	default="compile" 
	basedir="."
	xmlns:ivy="antlib:org.apache.ivy.ant"
	xmlns:artifact="antlib:org.apache.maven.artifact.ant"
	xmlns:if="ant:if"
    xmlns:unless="ant:unless"
	>

	<description>GProM automatically generated junit blackbox tests.</description>
	
	<dirname property="dir.antfile" file="${ant.file}"/>
	<property name="projectroot" value="${dir.antfile}/.." />
		
	<!-- ClassPath Setup -->
	<property name="classpath.name.bin" value="classpath.bin" />
	<property name="classpath.name.build" value="classpath.build" />
	<property name="classpath.name.run" value="classpath.run" />
	<property name="classpath.name.thejar" value="classpath.thejar" />
	
	<!-- define artifacts' name, which follows the convention of Maven -->
	<property name="artifactId" value="gprom-blackbox-tests" />
	
	<!-- directories -->
	<property name="dir.build" value="${projectroot}/build"/>
	<property name="dir.source" value="${projectroot}/javatest" />
	<property name="dir.bin" value="${dir.build}/javabin" />
	<property name="dir.testsrc" value="${projectroot}/autotests" />
	<property name="dir.testbin" value="${dir.build}/javabin" /> <!-- /org/gprom/jdbc/test/autotests" />-->
	<property name="dir.buildresource" value="${projectroot}/ant" />
	<property name="dir.library" value="${dir.build}/javatestlib" />
	<property name="dir.lib.main" value="${dir.build}/javalib" />
	<property name="dir.antlib" value="${projectroot}/ant" />
	<property name="dir.resource" value="${projectroot}/blackboxtests"/>
	<property name="dir.testcase" value="${dir.resource}/testcases"/>
	<property name="jar.test" value="${dir.build}/gprom-jdbc-test.jar" />
	<property name="jar.bin" value="${dir.build}/gprom-jdbc.jar" />
	
	<!-- resources -->
	<property name="conffile.name" value="GProMDriver.properties" />
	<property name="log4jconffile.name" value="log4j2.xml" />
	
	<!-- Main Class and Packages-->
	<property name="package.name" value="org.gprom.jdbc.test.autotests" />
  	<property name="mainclass" value="org.gprom.jdbc.test.SQLiteJDBCTest" />
	<property name="jar.creator" value="Illinois Institute of Technology, Department of Computer Science, DBGroup" />
	<property name="package" value="*" />
	<property name="mvn.description" value="This jar file contains automated tests for GProM" />
	<property name="mvn.url" value="https://github.com/IITDBGroup/gprom" />
	
	<!-- ivy settings -->
	<property name="ivy.file.test" value="${dir.buildresource}/ivy-test.xml" />
	<property name="ivy.file.build" value="${dir.buildresource}/ivy.xml" />
	
	<import file="${projectroot}/antutils/ant-common.xml" />
	
	<!-- settings -->
	<!-- get test name if specified -->
	<property name="junit.testname" value="${testname}" />
	<property name="test.loglevel" value="error" />
	
	<!-- targets -->
	<target name="download-dependencies" 
			depends="mkdirs-and-setup-props" 
			description="use ivy to download dependencies">
				
		<ivy-download-deps ivyfile="${ivy.file.test}"/>
		<fileset id="fat.jar.resources" 
				dir="${dir.lib.main}" 
				includes="${conffile.name},${log4jconffile.name}" />
		<classpath-from-dir dir="${dir.buildlib}" 
				pathname="${classpath.name.build}" 
				pathnamejar="${classpath.name.build}.jar"/>
		<classpath-from-dir dir="${dir.lib.main}" 
				pathname="${classpath.name.bin}" 
				pathnamejar="${classpath.name.bin}.jar"/>
		<path id="classpath.thejar">
			<fileset file="${jar.test}" />
			<path refid="${classpath.name.bin}" />
		</path>
		<print-path pathid="${classpath.name.thejar}" />
	</target>

	
	<target name="setup-additional-anttasks" 
			depends="download-dependencies">
		<echo message="building from ${basedir} with ant file located in ${dir.antfile}" />
		<taskdef resource="net/sf/antcontrib/antcontrib.properties"
			classpathref="${classpath.name.build}">
		</taskdef>
		
		<!-- set properties to empty if not set by user -->
		<property name="Host" value="" />
		<property name="Port" value="" />
		<property name="DBName" value="" />
		<property name="User" value="" />
		<property name="Password" value="" />
		<property name="TestcasePath" value="${basedir}/testcases" />
	</target>
	
	<target name="adapt-ddl-scripts"
			depends="setup-additional-anttasks"
			description="adapt DDL script to run from the source path">
		
		<var name="testdbscript" value="${dir.resource}/testdb/testDB.sql" />
		<antcall target="adapt-test-ddl-script" />
	</target>
	
	<target name="adapt-test-ddl-script">
	
		<copy file="${testdbscript}.in" tofile="${testdbscript}" overwrite="false">
			<filterchain>
				<replacetokens>
					<token key="PERMTESTERDIR" value="${projectrootdir}"/>
				</replacetokens>
			</filterchain>
		</copy>
	</target>
	
	<target name="clean-all"
		description="clean all">
		
		<delete dir="${dir.bin}" includeemptydirs="true" />
		<delete dir="${dir.build}" includeemptydirs="true" />
		<delete dir="${dir.testsrc}" includeemptydirs="true" />
	</target>
	
	<target name="clean" 
			depends="adapt-ddl-scripts"
			description="clean">
		<mkdir dir="${dir.testsrc}" />
		<copy todir="${dir.bin}">
			<fileset dir="${dir.buildresource}" includes="${conffile.name},${log4jconffile.name}" /> 
		</copy>
	</target>
	
	<target name="compile" 
			depends="clean"
			description="compile the test generator java files">
		<depend srcdir="${dir.source}"
		        destdir="${dir.bin}"
		        cache="${dir.build}/testdepcache"
		        closure="yes"/>
		<javac srcdir="${dir.source}" 
				destdir="${dir.bin}" 
				classpathref="${classpath.name.bin}" 
				debug="on"  
				fork="true" 
				includeantruntime="false">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>
	
	<target name="jar-generator" 
			depends="compile"
			description="create a jar file for the test generator">
		<create-jar>
			<additional-resources>
				<fileset refid="fat.jar.resources" />
			</additional-resources>
		</create-jar>
	</target>
	
	<target name="gen-tests" 
			depends="jar-generator"
			description="generate JUnit blackbox tests from xml files">
		<classpath-from-dir dir="${dir.library}" 
				pathname="${classpath.name.run}" 
				pathnamejar="${classpath.name.run}.jar">
			<path-elements>
				<pathelement path="${dir.resource}" />
				<fileset file="${jar.bin}" />
			</path-elements>
		</classpath-from-dir>

		<java 
			classname="org.gprom.jdbc.test.testgenerator.TestGenerator" 
			classpathref="${classpath.name.run}"
			fork="true" 
			failonerror="true"
			dir="${basedir}"
		>
			<sysproperty key="javax.xml.parsers.DocumentBuilderFactory" 
				value="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl" />
			<sysproperty key="generator.resourcedir" value="${dir.resource}" />
			<sysproperty key="generator.testcasedir" value="${dir.testcase}" />
			<sysproperty key="generator.sourcedir" value="${dir.testsrc}" />
			<sysproperty key="generator.package" value="${package.name}" />
			<sysproperty key="log4j2.level" value="${test.loglevel}" />
			<sysproperty key="Host" value="${Host}" />
    			<sysproperty key="Port" value="${Port}" />
			<sysproperty key="DBName" value="${DBName}" />
			<sysproperty key="User" value="${User}" />
			<sysproperty key="Password" value="${Password}" />
    			<sysproperty key="TestcasePath" value="${TestcasePath}" />	    			
		</java>
	</target>
	
	<target name="compile-tests" 
			depends="gen-tests"
			description="compile the generated JUnit tests">
		
		<mkdir dir="${dir.testbin}" />
		<depend srcdir="${dir.testsrc}"
		        destdir="${dir.testbin}"
		        cache="${dir.build}/blackboxdepcache"
		        closure="yes"/>
		<javac srcdir="${dir.testsrc}" destdir="${dir.testbin}" classpathref="${classpath.name.run}" 
			debug="on" fork="true" includeantruntime="false">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>
	
	<target name="jar-tests" 
			depends="compile-tests"
			description="create a jar file for the generated test cases that includes libgprom">
		<create-jar 
			jar="${jar.test}"
			classpath="${classpath.run.jar}"
			bindir="${dir.testbin}"
			>
			<additional-resources>
				<fileset refid="fat.jar.resources" />
			</additional-resources>
		</create-jar>
	</target>
	
	<target name="run-tests" 
			depends="jar-tests"
			description="run all generated junit tests">

	  <echo message="host: ${Host}" />
	  
		<delete dir="${basedir}/results"/>
		<mkdir dir="${basedir}/results"/>
		<junit printsummary="withOutAndErr" 
				haltonfailure="false" 
				haltonerror="false" 
				showoutput="true" 
				timeout="300000" 
				enableTestListenerEvents="true" 
				fork="true">
			<classpath refid="${classpath.name.thejar}"/>
			
			<formatter type="brief" usefile="false" />
			<formatter type="xml"/>

			<batchtest todir="${basedir}/results">
	            <fileset dir="${dir.testsrc}">
	                <include name="**/*_Test.java"/>
	            </fileset>
	        </batchtest>

			<sysproperty key="Host" value="${Host}" />
    			<sysproperty key="Port" value="${Port}" />
			<sysproperty key="DBName" value="${DBName}" />
			<sysproperty key="User" value="${User}" />
			<sysproperty key="Password" value="${Password}" />
    			<sysproperty key="TestcasePath" value="${TestcasePath}" />	    			
    			<sysproperty key="javax.xml.parsers.DocumentBuilderFactory" value="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl" />
    			<sysproperty key="log4j2.level" value="${test.loglevel}" /> 
		</junit>
	</target>

	<target name="run-test-only"
			description="run junit tests, requires tests to be compiled upfront"
			depends="setup-additional-anttasks">
		<!-- run all tests unless user has provided a test name -->
        <if>
			<not><equals arg1="${junit.testname}" arg2="$${testname}" /></not>
			<!-- run user provided test -->
	    		<then>
	            <echo message="Run ${junit.testname}" />
	    			<delete dir="${basedir}/results"/>
		    		<mkdir dir="${basedir}/results"/>
		    		<junit printsummary="withOutAndErr" 
		    				haltonfailure="true" 
		    				haltonerror="true" 
		    				showoutput="true" 
		    				enableTestListenerEvents="true" 
		    				fork="true">
		    			<classpath refid="${classpath.name.thejar}"/>
		    	        
		    			<batchtest  todir="${basedir}/results" fork="true">
		    	            <fileset dir="${dir.testsrc}">
		    	                <include name="**/${junit.testname}.java"/>
		    	            </fileset>
		    	        </batchtest>

		    			<formatter type="brief" usefile="false" />
		    			<formatter type="xml"/>

		    			<sysproperty key="Host" value="${Host}" />
		    			<sysproperty key="Port" value="${Port}" />
	    				<sysproperty key="DBName" value="${DBName}" />
	    				<sysproperty key="User" value="${User}" />
	    				<sysproperty key="Password" value="${Password}" />
		    			<sysproperty key="TestcasePath" value="${TestcasePath}" />	    			
		    			<sysproperty key="javax.xml.parsers.DocumentBuilderFactory" value="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl" />
		    			<sysproperty key="log4j2.level" value="${test.loglevel}" /> 
		    		</junit>
			</then>
	        	<!-- run all tests unless user has provided a test name -->
	        <else>
	            <echo message="Run all tests" />
		    		<delete dir="${basedir}/results"/>
		    		<mkdir dir="${basedir}/results"/>
	          	<junit printsummary="withOutAndErr" 
	          			haltonfailure="true" 
	          			haltonerror="true" 
	          			showoutput="true" 
	          			enableTestListenerEvents="true" 
	          			fork="true">
		    			<classpath refid="${classpath.name.thejar}"/>
		    	        <batchtest todir="${basedir}/results" fork="true">
		    	            <fileset dir="${dir.testsrc}">
		    	                <include name="**/*_Test.java"/>
		    	            </fileset>
		    	        </batchtest>
		    			<formatter type="brief" usefile="false" />
		    			<formatter type="xml"/>

		    			<sysproperty key="Host" value="${Host}" />
		    			<sysproperty key="Port" value="${Port}" />
	    				<sysproperty key="DBName" value="${DBName}" />
	    				<sysproperty key="User" value="${User}" />
	    				<sysproperty key="Password" value="${Password}" />
		    			<sysproperty key="TestcasePath" value="${TestcasePath}" />
	          		<sysproperty key="javax.xml.parsers.DocumentBuilderFactory" value="org.apache.xerces.jaxp.DocumentBuilderFactoryImpl" />
		    			<sysproperty key="log4j2.level" value="${test.loglevel}" /> 
		    		</junit>
			</else>
        </if> 
	</target>

	
</project>
